## class and object ***
Class:
      blueprint of creating objects.

Object :       
      instance of a class


## Examples ##

class laptop:
    price=0
    processor=""
    ram=""

hp=laptop()
dell=laptop()
lenovo=laptop()

hp.price=50000
hp.processor="I5"
hp.ram="8GB"

dell.price=60000
dell.processor="7th GEN"
dell.ram="12GB"

lenovo.price=55000
lenovo.processor="I7"
lenovo.ram="8GB"

print(dell.processor)
print(hp.ram)
print(lenovo)


## constructor and self function ##

class laptop:
    def __init__ (self):
        name=""
        price=0
        ram=""
        processor=""
    def display(self):
        print("Name",self.name)
        print("price",self.price)
        print("ram",self.ram)
        print("processor",self.processor)
        
        
hp=laptop()
dell=laptop()

hp.name="HP"
hp.price=50000
hp.ram="8GB"
hp.processor="I5"

dell.name="DELL"
dell.price=60000
dell.ram="16GB"
dell.processor="I7"

hp.display()
dell.display()


## Instance variable ##

class phone():
    def __init__(self,brand,price,chargertype,processor):
        self.brand=brand
        self.price=price
        self.chargertype=chargertype
        self.processor=processor
        
    def display(self):
        print("brand :",self.brand)
        print("price :",self.price)
        print("chargertype :",self.chargertype)
        print("processor",self.processor)
        
sam=phone("Samsung","20000","B-type","snapdragon-7")
red=phone("Redmi","15000","C-type","snapdragon-8")
oppo=phone("Oppo","22000","C-type","octacore")
vivo=phone("Vivo","18000","B-type","snapdragon-8")

sam.display()
red.display()
oppo.display()
vivo.display()


