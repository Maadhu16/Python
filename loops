## For loop ##

For loop : 
          used to iterate (repeat) over a sequence.

## Examples ##

for i in "apple":        # using i variable for iterate values
    print(i)

# Output - a
          p
          p
          l
          e

## loop with list ##

fruits = ["apple", "banana", "cherry"]

for fruit in fruits:      # using fruit variable for iterate fruits variable 
    print(fruit)

# Output - apple
           banana
           cherry

## loop with dictionary ##

student = {"name": "Roshan", "age": 22}

for i, j in student.items():    # i for iterate key , j for value , .items() returns all key-value pairs in dictionary 
    print(i, ":", j)

# Output - name : Roshan
           age : 22

## range method - range(start, stop, step) ##

for i in range(5):      # range(5) starts from 0 to 4  
    print(i)

## Nested for loop ##

for i in range(1,6):
    for j in range(1,3):
        print(i,j,"mango")


for i in range(1,5):
    print("week",i)
    for j in range(1,8):
        print("day",j)


## star pattern ##

for i in range(5):
    print()
    for j in range(1,i+1):
        print("*",end="")

for i in range(5):
    print()
    for j in range(1,i+1):
        print(j,end="")

## While loop ##

While loop : 
            used when you want to repeat a block of code as long as a condition is True.

## Examples ##

i=5
while(i==5):
    print(i)
    i=1


##print 10,20,30..200 ##

i=10
while(i<=200):
    print(i,end=",")
    i=i+10


##reverse order number

i=10
while(i>0):
    print(i)
    i=i-1

## find the factorial ##

i=20
fact=1
while(i>0):
    fact*=i
    i-=1
print(fact)

## Break - to stop ##

i = 1
while True:
    print(i)
    if i == 3:
        break
    i += 1

## continue - to skip ##

i = 0
while i < 5:
    i += 1
    if i == 3:
        continue
    print(i)

## Right angled triangle pattern ##

rows = 5
i = 1
while i <= rows:
    j = 1
    while j <= i:
        print("*", end=" ")
        j += 1
    print()   # new line
    i += 1

